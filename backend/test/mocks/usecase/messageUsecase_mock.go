// Code generated by MockGen. DO NOT EDIT.
// Source: /home/nakamura/program/Maximum/infra/Maximum-Infra-hands-on/backend/internal/usecase/messageUsecase.go
//
// Generated by this command:
//
//	mockgen -source=/home/nakamura/program/Maximum/infra/Maximum-Infra-hands-on/backend/internal/usecase/messageUsecase.go -destination=test/mocks/usecase/messageUsecase_mock.go
//

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"

	usecase "example.com/infrahandson/internal/usecase"
	gomock "go.uber.org/mock/gomock"
)

// MockMessageUseCaseInterface is a mock of MessageUseCaseInterface interface.
type MockMessageUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessageUseCaseInterfaceMockRecorder
	isgomock struct{}
}

// MockMessageUseCaseInterfaceMockRecorder is the mock recorder for MockMessageUseCaseInterface.
type MockMessageUseCaseInterfaceMockRecorder struct {
	mock *MockMessageUseCaseInterface
}

// NewMockMessageUseCaseInterface creates a new mock instance.
func NewMockMessageUseCaseInterface(ctrl *gomock.Controller) *MockMessageUseCaseInterface {
	mock := &MockMessageUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockMessageUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageUseCaseInterface) EXPECT() *MockMessageUseCaseInterfaceMockRecorder {
	return m.recorder
}

// GetMessageHistoryInRoom mocks base method.
func (m *MockMessageUseCaseInterface) GetMessageHistoryInRoom(ctx context.Context, req usecase.GetMessageHistoryInRoomRequest) (usecase.GetMessageHistoryInRoomResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageHistoryInRoom", ctx, req)
	ret0, _ := ret[0].(usecase.GetMessageHistoryInRoomResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageHistoryInRoom indicates an expected call of GetMessageHistoryInRoom.
func (mr *MockMessageUseCaseInterfaceMockRecorder) GetMessageHistoryInRoom(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageHistoryInRoom", reflect.TypeOf((*MockMessageUseCaseInterface)(nil).GetMessageHistoryInRoom), ctx, req)
}
