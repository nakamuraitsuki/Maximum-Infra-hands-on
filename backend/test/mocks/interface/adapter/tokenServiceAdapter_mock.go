// Code generated by MockGen. DO NOT EDIT.
// Source: /home/nakamuraitsuki/program/Maximum/Infra/Maximum-Infra-hands-on/backend/internal/interface/adapter/tokenServiceAdapter.go
//
// Generated by this command:
//
//	mockgen -source=/home/nakamuraitsuki/program/Maximum/Infra/Maximum-Infra-hands-on/backend/internal/interface/adapter/tokenServiceAdapter.go -destination=test/mocks/interface/adapter/tokenServiceAdapter_mock.go
//

// Package mock_adapter is a generated GoMock package.
package mock_adapter

import (
	reflect "reflect"

	entity "example.com/infrahandson/internal/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockTokenServiceAdapter is a mock of TokenServiceAdapter interface.
type MockTokenServiceAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockTokenServiceAdapterMockRecorder
	isgomock struct{}
}

// MockTokenServiceAdapterMockRecorder is the mock recorder for MockTokenServiceAdapter.
type MockTokenServiceAdapterMockRecorder struct {
	mock *MockTokenServiceAdapter
}

// NewMockTokenServiceAdapter creates a new mock instance.
func NewMockTokenServiceAdapter(ctrl *gomock.Controller) *MockTokenServiceAdapter {
	mock := &MockTokenServiceAdapter{ctrl: ctrl}
	mock.recorder = &MockTokenServiceAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenServiceAdapter) EXPECT() *MockTokenServiceAdapterMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockTokenServiceAdapter) GenerateToken(userID entity.UserID) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", userID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockTokenServiceAdapterMockRecorder) GenerateToken(userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockTokenServiceAdapter)(nil).GenerateToken), userID)
}

// GetExpireAt mocks base method.
func (m *MockTokenServiceAdapter) GetExpireAt(token string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExpireAt", token)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExpireAt indicates an expected call of GetExpireAt.
func (mr *MockTokenServiceAdapterMockRecorder) GetExpireAt(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExpireAt", reflect.TypeOf((*MockTokenServiceAdapter)(nil).GetExpireAt), token)
}

// ValidateToken mocks base method.
func (m *MockTokenServiceAdapter) ValidateToken(token string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockTokenServiceAdapterMockRecorder) ValidateToken(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockTokenServiceAdapter)(nil).ValidateToken), token)
}
